
EEPROM_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000060c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000060c  00000680  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000680  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000d4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000000c0  00000000  00000000  00000dd8  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000070b  00000000  00000000  00000e98  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001b9  00000000  00000000  000015a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000033a  00000000  00000000  0000175c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000011c  00000000  00000000  00001a98  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000026d  00000000  00000000  00001bb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000058d  00000000  00000000  00001e21  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e0       	ldi	r30, 0x0C	; 12
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 ed 02 	call	0x5da	; 0x5da <main>
  8a:	0c 94 04 03 	jmp	0x608	; 0x608 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <MDIO_voidSetPinDirection>:
#include "DIO_interface.h"
#include "DIO_private.h"

void MDIO_voidSetPinDirection(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8Direction)
{
    switch(Copy_u8Port)
  92:	81 30       	cpi	r24, 0x01	; 1
  94:	49 f1       	breq	.+82     	; 0xe8 <MDIO_voidSetPinDirection+0x56>
  96:	81 30       	cpi	r24, 0x01	; 1
  98:	38 f0       	brcs	.+14     	; 0xa8 <MDIO_voidSetPinDirection+0x16>
  9a:	82 30       	cpi	r24, 0x02	; 2
  9c:	09 f4       	brne	.+2      	; 0xa0 <MDIO_voidSetPinDirection+0xe>
  9e:	44 c0       	rjmp	.+136    	; 0x128 <MDIO_voidSetPinDirection+0x96>
  a0:	83 30       	cpi	r24, 0x03	; 3
  a2:	09 f0       	breq	.+2      	; 0xa6 <MDIO_voidSetPinDirection+0x14>
  a4:	7e c0       	rjmp	.+252    	; 0x1a2 <MDIO_voidSetPinDirection+0x110>
  a6:	5f c0       	rjmp	.+190    	; 0x166 <MDIO_voidSetPinDirection+0xd4>
	{
		case DIOA : 
		if (Copy_u8Direction==INPUT)
  a8:	44 23       	and	r20, r20
  aa:	71 f4       	brne	.+28     	; 0xc8 <MDIO_voidSetPinDirection+0x36>
		{
			CLR_BIT(DDRA,Copy_u8Pin);
  ac:	2a b3       	in	r18, 0x1a	; 26
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	ac 01       	movw	r20, r24
  b4:	02 c0       	rjmp	.+4      	; 0xba <MDIO_voidSetPinDirection+0x28>
  b6:	44 0f       	add	r20, r20
  b8:	55 1f       	adc	r21, r21
  ba:	6a 95       	dec	r22
  bc:	e2 f7       	brpl	.-8      	; 0xb6 <MDIO_voidSetPinDirection+0x24>
  be:	ba 01       	movw	r22, r20
  c0:	60 95       	com	r22
  c2:	62 23       	and	r22, r18
  c4:	6a bb       	out	0x1a, r22	; 26
  c6:	08 95       	ret
		} 
		else if (Copy_u8Direction==OUTPUT)
  c8:	41 30       	cpi	r20, 0x01	; 1
  ca:	09 f0       	breq	.+2      	; 0xce <MDIO_voidSetPinDirection+0x3c>
  cc:	6a c0       	rjmp	.+212    	; 0x1a2 <MDIO_voidSetPinDirection+0x110>
		{
			SET_BIT(DDRA,Copy_u8Pin);
  ce:	2a b3       	in	r18, 0x1a	; 26
  d0:	81 e0       	ldi	r24, 0x01	; 1
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	ac 01       	movw	r20, r24
  d6:	02 c0       	rjmp	.+4      	; 0xdc <MDIO_voidSetPinDirection+0x4a>
  d8:	44 0f       	add	r20, r20
  da:	55 1f       	adc	r21, r21
  dc:	6a 95       	dec	r22
  de:	e2 f7       	brpl	.-8      	; 0xd8 <MDIO_voidSetPinDirection+0x46>
  e0:	ba 01       	movw	r22, r20
  e2:	62 2b       	or	r22, r18
  e4:	6a bb       	out	0x1a, r22	; 26
  e6:	08 95       	ret
			/* error */
		}
		break;
		
		case DIOB :
		if (Copy_u8Direction==INPUT)
  e8:	44 23       	and	r20, r20
  ea:	71 f4       	brne	.+28     	; 0x108 <MDIO_voidSetPinDirection+0x76>
		{
			CLR_BIT(DDRB,Copy_u8Pin);
  ec:	27 b3       	in	r18, 0x17	; 23
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	ac 01       	movw	r20, r24
  f4:	02 c0       	rjmp	.+4      	; 0xfa <MDIO_voidSetPinDirection+0x68>
  f6:	44 0f       	add	r20, r20
  f8:	55 1f       	adc	r21, r21
  fa:	6a 95       	dec	r22
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <MDIO_voidSetPinDirection+0x64>
  fe:	ba 01       	movw	r22, r20
 100:	60 95       	com	r22
 102:	62 23       	and	r22, r18
 104:	67 bb       	out	0x17, r22	; 23
 106:	08 95       	ret
		}
		else if (Copy_u8Direction==OUTPUT)
 108:	41 30       	cpi	r20, 0x01	; 1
 10a:	09 f0       	breq	.+2      	; 0x10e <MDIO_voidSetPinDirection+0x7c>
 10c:	4a c0       	rjmp	.+148    	; 0x1a2 <MDIO_voidSetPinDirection+0x110>
		{
			SET_BIT(DDRB,Copy_u8Pin);
 10e:	27 b3       	in	r18, 0x17	; 23
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	ac 01       	movw	r20, r24
 116:	02 c0       	rjmp	.+4      	; 0x11c <MDIO_voidSetPinDirection+0x8a>
 118:	44 0f       	add	r20, r20
 11a:	55 1f       	adc	r21, r21
 11c:	6a 95       	dec	r22
 11e:	e2 f7       	brpl	.-8      	; 0x118 <MDIO_voidSetPinDirection+0x86>
 120:	ba 01       	movw	r22, r20
 122:	62 2b       	or	r22, r18
 124:	67 bb       	out	0x17, r22	; 23
 126:	08 95       	ret
			/* error */
		}
		break;
		
		case DIOC :
		if (Copy_u8Direction==INPUT)
 128:	44 23       	and	r20, r20
 12a:	71 f4       	brne	.+28     	; 0x148 <MDIO_voidSetPinDirection+0xb6>
		{
			CLR_BIT(DDRC,Copy_u8Pin);
 12c:	24 b3       	in	r18, 0x14	; 20
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	ac 01       	movw	r20, r24
 134:	02 c0       	rjmp	.+4      	; 0x13a <MDIO_voidSetPinDirection+0xa8>
 136:	44 0f       	add	r20, r20
 138:	55 1f       	adc	r21, r21
 13a:	6a 95       	dec	r22
 13c:	e2 f7       	brpl	.-8      	; 0x136 <MDIO_voidSetPinDirection+0xa4>
 13e:	ba 01       	movw	r22, r20
 140:	60 95       	com	r22
 142:	62 23       	and	r22, r18
 144:	64 bb       	out	0x14, r22	; 20
 146:	08 95       	ret
		}
		else if (Copy_u8Direction==OUTPUT)
 148:	41 30       	cpi	r20, 0x01	; 1
 14a:	59 f5       	brne	.+86     	; 0x1a2 <MDIO_voidSetPinDirection+0x110>
		{
			SET_BIT(DDRC,Copy_u8Pin);
 14c:	24 b3       	in	r18, 0x14	; 20
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	ac 01       	movw	r20, r24
 154:	02 c0       	rjmp	.+4      	; 0x15a <MDIO_voidSetPinDirection+0xc8>
 156:	44 0f       	add	r20, r20
 158:	55 1f       	adc	r21, r21
 15a:	6a 95       	dec	r22
 15c:	e2 f7       	brpl	.-8      	; 0x156 <MDIO_voidSetPinDirection+0xc4>
 15e:	ba 01       	movw	r22, r20
 160:	62 2b       	or	r22, r18
 162:	64 bb       	out	0x14, r22	; 20
 164:	08 95       	ret
			/* error */
		}
		break;
			
		case DIOD :
		if (Copy_u8Direction==INPUT)
 166:	44 23       	and	r20, r20
 168:	71 f4       	brne	.+28     	; 0x186 <MDIO_voidSetPinDirection+0xf4>
		{
			CLR_BIT(DDRD,Copy_u8Pin);
 16a:	21 b3       	in	r18, 0x11	; 17
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	ac 01       	movw	r20, r24
 172:	02 c0       	rjmp	.+4      	; 0x178 <MDIO_voidSetPinDirection+0xe6>
 174:	44 0f       	add	r20, r20
 176:	55 1f       	adc	r21, r21
 178:	6a 95       	dec	r22
 17a:	e2 f7       	brpl	.-8      	; 0x174 <MDIO_voidSetPinDirection+0xe2>
 17c:	ba 01       	movw	r22, r20
 17e:	60 95       	com	r22
 180:	62 23       	and	r22, r18
 182:	61 bb       	out	0x11, r22	; 17
 184:	08 95       	ret
		}
		else if (Copy_u8Direction==OUTPUT)
 186:	41 30       	cpi	r20, 0x01	; 1
 188:	61 f4       	brne	.+24     	; 0x1a2 <MDIO_voidSetPinDirection+0x110>
		{
			SET_BIT(DDRD,Copy_u8Pin);
 18a:	21 b3       	in	r18, 0x11	; 17
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	ac 01       	movw	r20, r24
 192:	02 c0       	rjmp	.+4      	; 0x198 <MDIO_voidSetPinDirection+0x106>
 194:	44 0f       	add	r20, r20
 196:	55 1f       	adc	r21, r21
 198:	6a 95       	dec	r22
 19a:	e2 f7       	brpl	.-8      	; 0x194 <MDIO_voidSetPinDirection+0x102>
 19c:	ba 01       	movw	r22, r20
 19e:	62 2b       	or	r22, r18
 1a0:	61 bb       	out	0x11, r22	; 17
 1a2:	08 95       	ret

000001a4 <MDIO_voidSetPortDirection>:
	}
}
void MDIO_voidSetPortDirection(u8 Copy_u8Port,u8 Copy_u8Direction)
{

  switch(Copy_u8Port)
 1a4:	81 30       	cpi	r24, 0x01	; 1
 1a6:	81 f0       	breq	.+32     	; 0x1c8 <MDIO_voidSetPortDirection+0x24>
 1a8:	81 30       	cpi	r24, 0x01	; 1
 1aa:	28 f0       	brcs	.+10     	; 0x1b6 <MDIO_voidSetPortDirection+0x12>
 1ac:	82 30       	cpi	r24, 0x02	; 2
 1ae:	a9 f0       	breq	.+42     	; 0x1da <MDIO_voidSetPortDirection+0x36>
 1b0:	83 30       	cpi	r24, 0x03	; 3
 1b2:	21 f5       	brne	.+72     	; 0x1fc <MDIO_voidSetPortDirection+0x58>
 1b4:	1b c0       	rjmp	.+54     	; 0x1ec <MDIO_voidSetPortDirection+0x48>
  {
	  case DIOA :
	  if (Copy_u8Direction==INPUT)
 1b6:	66 23       	and	r22, r22
 1b8:	11 f4       	brne	.+4      	; 0x1be <MDIO_voidSetPortDirection+0x1a>
	  {
		  DDRA=0x00;
 1ba:	1a ba       	out	0x1a, r1	; 26
 1bc:	08 95       	ret
	  }
	  else if (Copy_u8Direction==OUTPUT)
 1be:	61 30       	cpi	r22, 0x01	; 1
 1c0:	e9 f4       	brne	.+58     	; 0x1fc <MDIO_voidSetPortDirection+0x58>
	  {
		  DDRA=0xFF;
 1c2:	8f ef       	ldi	r24, 0xFF	; 255
 1c4:	8a bb       	out	0x1a, r24	; 26
 1c6:	08 95       	ret
	  {
	    /* error */
	  }
	  break;
	  case DIOB :
	  if (Copy_u8Direction==INPUT)
 1c8:	66 23       	and	r22, r22
 1ca:	11 f4       	brne	.+4      	; 0x1d0 <MDIO_voidSetPortDirection+0x2c>
	  {
		  DDRB=0x00;
 1cc:	17 ba       	out	0x17, r1	; 23
 1ce:	08 95       	ret
	  }
	  else if (Copy_u8Direction==OUTPUT)
 1d0:	61 30       	cpi	r22, 0x01	; 1
 1d2:	a1 f4       	brne	.+40     	; 0x1fc <MDIO_voidSetPortDirection+0x58>
	  {
		  DDRB=0xFF;
 1d4:	8f ef       	ldi	r24, 0xFF	; 255
 1d6:	87 bb       	out	0x17, r24	; 23
 1d8:	08 95       	ret
	  {
		  /* error */
	  }
	  break;	
	  case DIOC :
	  if (Copy_u8Direction==INPUT)
 1da:	66 23       	and	r22, r22
 1dc:	11 f4       	brne	.+4      	; 0x1e2 <MDIO_voidSetPortDirection+0x3e>
	  {
		  DDRC=0x00;
 1de:	14 ba       	out	0x14, r1	; 20
 1e0:	08 95       	ret
	  }
	  else if (Copy_u8Direction==OUTPUT)
 1e2:	61 30       	cpi	r22, 0x01	; 1
 1e4:	59 f4       	brne	.+22     	; 0x1fc <MDIO_voidSetPortDirection+0x58>
	  {
		  DDRC=0xFF;
 1e6:	8f ef       	ldi	r24, 0xFF	; 255
 1e8:	84 bb       	out	0x14, r24	; 20
 1ea:	08 95       	ret
	  {
		  /* error */
	  }
	  break;
	  case DIOD :
	  if (Copy_u8Direction==INPUT)
 1ec:	66 23       	and	r22, r22
 1ee:	11 f4       	brne	.+4      	; 0x1f4 <MDIO_voidSetPortDirection+0x50>
	  {
		  DDRD=0x00;
 1f0:	11 ba       	out	0x11, r1	; 17
 1f2:	08 95       	ret
	  }
	  else if (Copy_u8Direction==OUTPUT)
 1f4:	61 30       	cpi	r22, 0x01	; 1
 1f6:	11 f4       	brne	.+4      	; 0x1fc <MDIO_voidSetPortDirection+0x58>
	  {
		  DDRD=0xFF;
 1f8:	8f ef       	ldi	r24, 0xFF	; 255
 1fa:	81 bb       	out	0x11, r24	; 17
 1fc:	08 95       	ret

000001fe <MDIO_voidSetPinValue>:

}

void MDIO_voidSetPinValue(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8Value)
{
    switch(Copy_u8Port)
 1fe:	81 30       	cpi	r24, 0x01	; 1
 200:	49 f1       	breq	.+82     	; 0x254 <MDIO_voidSetPinValue+0x56>
 202:	81 30       	cpi	r24, 0x01	; 1
 204:	38 f0       	brcs	.+14     	; 0x214 <MDIO_voidSetPinValue+0x16>
 206:	82 30       	cpi	r24, 0x02	; 2
 208:	09 f4       	brne	.+2      	; 0x20c <MDIO_voidSetPinValue+0xe>
 20a:	44 c0       	rjmp	.+136    	; 0x294 <MDIO_voidSetPinValue+0x96>
 20c:	83 30       	cpi	r24, 0x03	; 3
 20e:	09 f0       	breq	.+2      	; 0x212 <MDIO_voidSetPinValue+0x14>
 210:	7e c0       	rjmp	.+252    	; 0x30e <MDIO_voidSetPinValue+0x110>
 212:	5f c0       	rjmp	.+190    	; 0x2d2 <MDIO_voidSetPinValue+0xd4>
    {
	    case DIOA :
	    if (Copy_u8Value==LOW)
 214:	44 23       	and	r20, r20
 216:	71 f4       	brne	.+28     	; 0x234 <MDIO_voidSetPinValue+0x36>
	    {
		    CLR_BIT(PORTA,Copy_u8Pin);
 218:	2b b3       	in	r18, 0x1b	; 27
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	ac 01       	movw	r20, r24
 220:	02 c0       	rjmp	.+4      	; 0x226 <MDIO_voidSetPinValue+0x28>
 222:	44 0f       	add	r20, r20
 224:	55 1f       	adc	r21, r21
 226:	6a 95       	dec	r22
 228:	e2 f7       	brpl	.-8      	; 0x222 <MDIO_voidSetPinValue+0x24>
 22a:	ba 01       	movw	r22, r20
 22c:	60 95       	com	r22
 22e:	62 23       	and	r22, r18
 230:	6b bb       	out	0x1b, r22	; 27
 232:	08 95       	ret
	    }
	    else if (Copy_u8Value==HIGH)
 234:	41 30       	cpi	r20, 0x01	; 1
 236:	09 f0       	breq	.+2      	; 0x23a <MDIO_voidSetPinValue+0x3c>
 238:	6a c0       	rjmp	.+212    	; 0x30e <MDIO_voidSetPinValue+0x110>
	    {
		    SET_BIT(PORTA,Copy_u8Pin);
 23a:	2b b3       	in	r18, 0x1b	; 27
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	ac 01       	movw	r20, r24
 242:	02 c0       	rjmp	.+4      	; 0x248 <MDIO_voidSetPinValue+0x4a>
 244:	44 0f       	add	r20, r20
 246:	55 1f       	adc	r21, r21
 248:	6a 95       	dec	r22
 24a:	e2 f7       	brpl	.-8      	; 0x244 <MDIO_voidSetPinValue+0x46>
 24c:	ba 01       	movw	r22, r20
 24e:	62 2b       	or	r22, r18
 250:	6b bb       	out	0x1b, r22	; 27
 252:	08 95       	ret
		    /* error */
	    }
	    break;
	    
	    case DIOB :
	    if (Copy_u8Value==LOW)
 254:	44 23       	and	r20, r20
 256:	71 f4       	brne	.+28     	; 0x274 <MDIO_voidSetPinValue+0x76>
	    {
		    CLR_BIT(PORTB,Copy_u8Pin);
 258:	28 b3       	in	r18, 0x18	; 24
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	ac 01       	movw	r20, r24
 260:	02 c0       	rjmp	.+4      	; 0x266 <MDIO_voidSetPinValue+0x68>
 262:	44 0f       	add	r20, r20
 264:	55 1f       	adc	r21, r21
 266:	6a 95       	dec	r22
 268:	e2 f7       	brpl	.-8      	; 0x262 <MDIO_voidSetPinValue+0x64>
 26a:	ba 01       	movw	r22, r20
 26c:	60 95       	com	r22
 26e:	62 23       	and	r22, r18
 270:	68 bb       	out	0x18, r22	; 24
 272:	08 95       	ret
	    }
	    else if (Copy_u8Value==HIGH)
 274:	41 30       	cpi	r20, 0x01	; 1
 276:	09 f0       	breq	.+2      	; 0x27a <MDIO_voidSetPinValue+0x7c>
 278:	4a c0       	rjmp	.+148    	; 0x30e <MDIO_voidSetPinValue+0x110>
	    {
		    SET_BIT(PORTB,Copy_u8Pin);
 27a:	28 b3       	in	r18, 0x18	; 24
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	ac 01       	movw	r20, r24
 282:	02 c0       	rjmp	.+4      	; 0x288 <MDIO_voidSetPinValue+0x8a>
 284:	44 0f       	add	r20, r20
 286:	55 1f       	adc	r21, r21
 288:	6a 95       	dec	r22
 28a:	e2 f7       	brpl	.-8      	; 0x284 <MDIO_voidSetPinValue+0x86>
 28c:	ba 01       	movw	r22, r20
 28e:	62 2b       	or	r22, r18
 290:	68 bb       	out	0x18, r22	; 24
 292:	08 95       	ret
	    {
		    /* error */
	    }
	    break;
	    case DIOC :
	    if (Copy_u8Value==LOW)
 294:	44 23       	and	r20, r20
 296:	71 f4       	brne	.+28     	; 0x2b4 <MDIO_voidSetPinValue+0xb6>
	    {
		    CLR_BIT(PORTC,Copy_u8Pin);
 298:	25 b3       	in	r18, 0x15	; 21
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	ac 01       	movw	r20, r24
 2a0:	02 c0       	rjmp	.+4      	; 0x2a6 <MDIO_voidSetPinValue+0xa8>
 2a2:	44 0f       	add	r20, r20
 2a4:	55 1f       	adc	r21, r21
 2a6:	6a 95       	dec	r22
 2a8:	e2 f7       	brpl	.-8      	; 0x2a2 <MDIO_voidSetPinValue+0xa4>
 2aa:	ba 01       	movw	r22, r20
 2ac:	60 95       	com	r22
 2ae:	62 23       	and	r22, r18
 2b0:	65 bb       	out	0x15, r22	; 21
 2b2:	08 95       	ret
	    }
	    else if (Copy_u8Value==HIGH)
 2b4:	41 30       	cpi	r20, 0x01	; 1
 2b6:	59 f5       	brne	.+86     	; 0x30e <MDIO_voidSetPinValue+0x110>
	    {
		    SET_BIT(PORTC,Copy_u8Pin);
 2b8:	25 b3       	in	r18, 0x15	; 21
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	ac 01       	movw	r20, r24
 2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <MDIO_voidSetPinValue+0xc8>
 2c2:	44 0f       	add	r20, r20
 2c4:	55 1f       	adc	r21, r21
 2c6:	6a 95       	dec	r22
 2c8:	e2 f7       	brpl	.-8      	; 0x2c2 <MDIO_voidSetPinValue+0xc4>
 2ca:	ba 01       	movw	r22, r20
 2cc:	62 2b       	or	r22, r18
 2ce:	65 bb       	out	0x15, r22	; 21
 2d0:	08 95       	ret
	    {
		    /* error */
	    }
	    break;
	    case DIOD :
	    if (Copy_u8Value==LOW)
 2d2:	44 23       	and	r20, r20
 2d4:	71 f4       	brne	.+28     	; 0x2f2 <MDIO_voidSetPinValue+0xf4>
	    {
		    CLR_BIT(PORTD,Copy_u8Pin);
 2d6:	22 b3       	in	r18, 0x12	; 18
 2d8:	81 e0       	ldi	r24, 0x01	; 1
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	ac 01       	movw	r20, r24
 2de:	02 c0       	rjmp	.+4      	; 0x2e4 <MDIO_voidSetPinValue+0xe6>
 2e0:	44 0f       	add	r20, r20
 2e2:	55 1f       	adc	r21, r21
 2e4:	6a 95       	dec	r22
 2e6:	e2 f7       	brpl	.-8      	; 0x2e0 <MDIO_voidSetPinValue+0xe2>
 2e8:	ba 01       	movw	r22, r20
 2ea:	60 95       	com	r22
 2ec:	62 23       	and	r22, r18
 2ee:	62 bb       	out	0x12, r22	; 18
 2f0:	08 95       	ret
	    }
	    else if (Copy_u8Value==HIGH)
 2f2:	41 30       	cpi	r20, 0x01	; 1
 2f4:	61 f4       	brne	.+24     	; 0x30e <MDIO_voidSetPinValue+0x110>
	    {
		    SET_BIT(PORTD,Copy_u8Pin);
 2f6:	22 b3       	in	r18, 0x12	; 18
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	ac 01       	movw	r20, r24
 2fe:	02 c0       	rjmp	.+4      	; 0x304 <MDIO_voidSetPinValue+0x106>
 300:	44 0f       	add	r20, r20
 302:	55 1f       	adc	r21, r21
 304:	6a 95       	dec	r22
 306:	e2 f7       	brpl	.-8      	; 0x300 <MDIO_voidSetPinValue+0x102>
 308:	ba 01       	movw	r22, r20
 30a:	62 2b       	or	r22, r18
 30c:	62 bb       	out	0x12, r22	; 18
 30e:	08 95       	ret

00000310 <MDIO_u8GetPinValue>:
    }
}
u8 MDIO_u8GetPinValue(u8 Copy_u8Port,u8 Copy_u8Pin)
{
	 u8 Local_u8value=0;
	 switch(Copy_u8Port)
 310:	81 30       	cpi	r24, 0x01	; 1
 312:	89 f0       	breq	.+34     	; 0x336 <MDIO_u8GetPinValue+0x26>
 314:	81 30       	cpi	r24, 0x01	; 1
 316:	28 f0       	brcs	.+10     	; 0x322 <MDIO_u8GetPinValue+0x12>
 318:	82 30       	cpi	r24, 0x02	; 2
 31a:	b9 f0       	breq	.+46     	; 0x34a <MDIO_u8GetPinValue+0x3a>
 31c:	83 30       	cpi	r24, 0x03	; 3
 31e:	49 f5       	brne	.+82     	; 0x372 <MDIO_u8GetPinValue+0x62>
 320:	1e c0       	rjmp	.+60     	; 0x35e <MDIO_u8GetPinValue+0x4e>
	 {
		 case DIOA :
		 Local_u8value=GET_BIT(PINA,Copy_u8Pin);
 322:	29 b3       	in	r18, 0x19	; 25
 324:	30 e0       	ldi	r19, 0x00	; 0
 326:	c9 01       	movw	r24, r18
 328:	02 c0       	rjmp	.+4      	; 0x32e <MDIO_u8GetPinValue+0x1e>
 32a:	95 95       	asr	r25
 32c:	87 95       	ror	r24
 32e:	6a 95       	dec	r22
 330:	e2 f7       	brpl	.-8      	; 0x32a <MDIO_u8GetPinValue+0x1a>
 332:	81 70       	andi	r24, 0x01	; 1
		 break;
 334:	08 95       	ret
		 case DIOB :
		 Local_u8value=GET_BIT(PINB,Copy_u8Pin);
 336:	26 b3       	in	r18, 0x16	; 22
 338:	30 e0       	ldi	r19, 0x00	; 0
 33a:	c9 01       	movw	r24, r18
 33c:	02 c0       	rjmp	.+4      	; 0x342 <MDIO_u8GetPinValue+0x32>
 33e:	95 95       	asr	r25
 340:	87 95       	ror	r24
 342:	6a 95       	dec	r22
 344:	e2 f7       	brpl	.-8      	; 0x33e <MDIO_u8GetPinValue+0x2e>
 346:	81 70       	andi	r24, 0x01	; 1
		 break;
 348:	08 95       	ret
		 case DIOC :
		 Local_u8value=GET_BIT(PINC,Copy_u8Pin);
 34a:	23 b3       	in	r18, 0x13	; 19
 34c:	30 e0       	ldi	r19, 0x00	; 0
 34e:	c9 01       	movw	r24, r18
 350:	02 c0       	rjmp	.+4      	; 0x356 <MDIO_u8GetPinValue+0x46>
 352:	95 95       	asr	r25
 354:	87 95       	ror	r24
 356:	6a 95       	dec	r22
 358:	e2 f7       	brpl	.-8      	; 0x352 <MDIO_u8GetPinValue+0x42>
 35a:	81 70       	andi	r24, 0x01	; 1
		 break;
 35c:	08 95       	ret
		 case DIOD :
		 Local_u8value=GET_BIT(PIND,Copy_u8Pin);
 35e:	20 b3       	in	r18, 0x10	; 16
 360:	30 e0       	ldi	r19, 0x00	; 0
 362:	c9 01       	movw	r24, r18
 364:	02 c0       	rjmp	.+4      	; 0x36a <MDIO_u8GetPinValue+0x5a>
 366:	95 95       	asr	r25
 368:	87 95       	ror	r24
 36a:	6a 95       	dec	r22
 36c:	e2 f7       	brpl	.-8      	; 0x366 <MDIO_u8GetPinValue+0x56>
 36e:	81 70       	andi	r24, 0x01	; 1
		 break;		 		 
 370:	08 95       	ret
	    
    }
}
u8 MDIO_u8GetPinValue(u8 Copy_u8Port,u8 Copy_u8Pin)
{
	 u8 Local_u8value=0;
 372:	80 e0       	ldi	r24, 0x00	; 0
		 break;		 		 
		 default: break;
		 
	 }
	 return Local_u8value;
}
 374:	08 95       	ret

00000376 <MDIO_voidSetPortValue>:
void MDIO_voidSetPortValue(u8 Copy_u8Port,u8 Copy_u8Value)
{
	switch(Copy_u8Port)
 376:	81 30       	cpi	r24, 0x01	; 1
 378:	49 f0       	breq	.+18     	; 0x38c <MDIO_voidSetPortValue+0x16>
 37a:	81 30       	cpi	r24, 0x01	; 1
 37c:	28 f0       	brcs	.+10     	; 0x388 <MDIO_voidSetPortValue+0x12>
 37e:	82 30       	cpi	r24, 0x02	; 2
 380:	39 f0       	breq	.+14     	; 0x390 <MDIO_voidSetPortValue+0x1a>
 382:	83 30       	cpi	r24, 0x03	; 3
 384:	41 f4       	brne	.+16     	; 0x396 <MDIO_voidSetPortValue+0x20>
 386:	06 c0       	rjmp	.+12     	; 0x394 <MDIO_voidSetPortValue+0x1e>
	{
		case DIOA :
		PORTA=Copy_u8Value;
 388:	6b bb       	out	0x1b, r22	; 27
		break;
 38a:	08 95       	ret
		case DIOB :
		PORTB=Copy_u8Value;
 38c:	68 bb       	out	0x18, r22	; 24
		break;	
 38e:	08 95       	ret
		case DIOC :
		PORTC=Copy_u8Value;
 390:	65 bb       	out	0x15, r22	; 21
		break;
 392:	08 95       	ret
		case DIOD :
		PORTD=Copy_u8Value;
 394:	62 bb       	out	0x12, r22	; 18
 396:	08 95       	ret

00000398 <MDIO_voidTogglePin>:
	}
}

void MDIO_voidTogglePin(u8 Copy_u8Port,u8 Copy_u8Pin)
{
	switch(Copy_u8Port)
 398:	81 30       	cpi	r24, 0x01	; 1
 39a:	a1 f0       	breq	.+40     	; 0x3c4 <MDIO_voidTogglePin+0x2c>
 39c:	81 30       	cpi	r24, 0x01	; 1
 39e:	28 f0       	brcs	.+10     	; 0x3aa <MDIO_voidTogglePin+0x12>
 3a0:	82 30       	cpi	r24, 0x02	; 2
 3a2:	e9 f0       	breq	.+58     	; 0x3de <MDIO_voidTogglePin+0x46>
 3a4:	83 30       	cpi	r24, 0x03	; 3
 3a6:	a1 f5       	brne	.+104    	; 0x410 <MDIO_voidTogglePin+0x78>
 3a8:	27 c0       	rjmp	.+78     	; 0x3f8 <MDIO_voidTogglePin+0x60>
	{
		
		case DIOA :
		TOG_BIT(PORTA,Copy_u8Pin);
 3aa:	2b b3       	in	r18, 0x1b	; 27
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	ac 01       	movw	r20, r24
 3b2:	02 c0       	rjmp	.+4      	; 0x3b8 <MDIO_voidTogglePin+0x20>
 3b4:	44 0f       	add	r20, r20
 3b6:	55 1f       	adc	r21, r21
 3b8:	6a 95       	dec	r22
 3ba:	e2 f7       	brpl	.-8      	; 0x3b4 <MDIO_voidTogglePin+0x1c>
 3bc:	ba 01       	movw	r22, r20
 3be:	62 27       	eor	r22, r18
 3c0:	6b bb       	out	0x1b, r22	; 27
		break;
 3c2:	08 95       	ret
		case DIOB :
		TOG_BIT(PORTB,Copy_u8Pin);
 3c4:	28 b3       	in	r18, 0x18	; 24
 3c6:	81 e0       	ldi	r24, 0x01	; 1
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	ac 01       	movw	r20, r24
 3cc:	02 c0       	rjmp	.+4      	; 0x3d2 <MDIO_voidTogglePin+0x3a>
 3ce:	44 0f       	add	r20, r20
 3d0:	55 1f       	adc	r21, r21
 3d2:	6a 95       	dec	r22
 3d4:	e2 f7       	brpl	.-8      	; 0x3ce <MDIO_voidTogglePin+0x36>
 3d6:	ba 01       	movw	r22, r20
 3d8:	62 27       	eor	r22, r18
 3da:	68 bb       	out	0x18, r22	; 24
		break;
 3dc:	08 95       	ret
		case DIOC :
		TOG_BIT(PORTC,Copy_u8Pin);
 3de:	25 b3       	in	r18, 0x15	; 21
 3e0:	81 e0       	ldi	r24, 0x01	; 1
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	ac 01       	movw	r20, r24
 3e6:	02 c0       	rjmp	.+4      	; 0x3ec <MDIO_voidTogglePin+0x54>
 3e8:	44 0f       	add	r20, r20
 3ea:	55 1f       	adc	r21, r21
 3ec:	6a 95       	dec	r22
 3ee:	e2 f7       	brpl	.-8      	; 0x3e8 <MDIO_voidTogglePin+0x50>
 3f0:	ba 01       	movw	r22, r20
 3f2:	62 27       	eor	r22, r18
 3f4:	65 bb       	out	0x15, r22	; 21
		break;
 3f6:	08 95       	ret
		case DIOD :
		TOG_BIT(PORTD,Copy_u8Pin);
 3f8:	22 b3       	in	r18, 0x12	; 18
 3fa:	81 e0       	ldi	r24, 0x01	; 1
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	ac 01       	movw	r20, r24
 400:	02 c0       	rjmp	.+4      	; 0x406 <MDIO_voidTogglePin+0x6e>
 402:	44 0f       	add	r20, r20
 404:	55 1f       	adc	r21, r21
 406:	6a 95       	dec	r22
 408:	e2 f7       	brpl	.-8      	; 0x402 <MDIO_voidTogglePin+0x6a>
 40a:	ba 01       	movw	r22, r20
 40c:	62 27       	eor	r22, r18
 40e:	62 bb       	out	0x12, r22	; 18
 410:	08 95       	ret

00000412 <MDIO_voidTogglePort>:
	}
}

void MDIO_voidTogglePort(u8 Copy_u8Port)
{
	    switch(Copy_u8Port)
 412:	81 30       	cpi	r24, 0x01	; 1
 414:	59 f0       	breq	.+22     	; 0x42c <MDIO_voidTogglePort+0x1a>
 416:	81 30       	cpi	r24, 0x01	; 1
 418:	28 f0       	brcs	.+10     	; 0x424 <MDIO_voidTogglePort+0x12>
 41a:	82 30       	cpi	r24, 0x02	; 2
 41c:	59 f0       	breq	.+22     	; 0x434 <MDIO_voidTogglePort+0x22>
 41e:	83 30       	cpi	r24, 0x03	; 3
 420:	81 f4       	brne	.+32     	; 0x442 <MDIO_voidTogglePort+0x30>
 422:	0c c0       	rjmp	.+24     	; 0x43c <MDIO_voidTogglePort+0x2a>
		{
		case DIOA :
		PORTA=~PORTA;
 424:	8b b3       	in	r24, 0x1b	; 27
 426:	80 95       	com	r24
 428:	8b bb       	out	0x1b, r24	; 27
		break;
 42a:	08 95       	ret
		case DIOB :
		PORTB=~PORTB;
 42c:	88 b3       	in	r24, 0x18	; 24
 42e:	80 95       	com	r24
 430:	88 bb       	out	0x18, r24	; 24
		break;
 432:	08 95       	ret
		case DIOC :
		PORTC=~PORTC;
 434:	85 b3       	in	r24, 0x15	; 21
 436:	80 95       	com	r24
 438:	85 bb       	out	0x15, r24	; 21
		break;
 43a:	08 95       	ret
		case DIOD :
		PORTD=~PORTD;
 43c:	82 b3       	in	r24, 0x12	; 18
 43e:	80 95       	com	r24
 440:	82 bb       	out	0x12, r24	; 18
 442:	08 95       	ret

00000444 <MDIO_voidEnablePullUp>:
		}			
}

void MDIO_voidEnablePullUp(u8 Copy_u8Port,u8 Copy_u8Pin)
{
	switch(Copy_u8Port)
 444:	81 30       	cpi	r24, 0x01	; 1
 446:	a1 f0       	breq	.+40     	; 0x470 <MDIO_voidEnablePullUp+0x2c>
 448:	81 30       	cpi	r24, 0x01	; 1
 44a:	28 f0       	brcs	.+10     	; 0x456 <MDIO_voidEnablePullUp+0x12>
 44c:	82 30       	cpi	r24, 0x02	; 2
 44e:	e9 f0       	breq	.+58     	; 0x48a <MDIO_voidEnablePullUp+0x46>
 450:	83 30       	cpi	r24, 0x03	; 3
 452:	a1 f5       	brne	.+104    	; 0x4bc <MDIO_voidEnablePullUp+0x78>
 454:	27 c0       	rjmp	.+78     	; 0x4a4 <MDIO_voidEnablePullUp+0x60>
	{
		case DIOA : 
		SET_BIT(PORTA,Copy_u8Pin);
 456:	2b b3       	in	r18, 0x1b	; 27
 458:	81 e0       	ldi	r24, 0x01	; 1
 45a:	90 e0       	ldi	r25, 0x00	; 0
 45c:	ac 01       	movw	r20, r24
 45e:	02 c0       	rjmp	.+4      	; 0x464 <MDIO_voidEnablePullUp+0x20>
 460:	44 0f       	add	r20, r20
 462:	55 1f       	adc	r21, r21
 464:	6a 95       	dec	r22
 466:	e2 f7       	brpl	.-8      	; 0x460 <MDIO_voidEnablePullUp+0x1c>
 468:	ba 01       	movw	r22, r20
 46a:	62 2b       	or	r22, r18
 46c:	6b bb       	out	0x1b, r22	; 27
		break;
 46e:	08 95       	ret
		case DIOB :
		SET_BIT(PORTB,Copy_u8Pin);
 470:	28 b3       	in	r18, 0x18	; 24
 472:	81 e0       	ldi	r24, 0x01	; 1
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	ac 01       	movw	r20, r24
 478:	02 c0       	rjmp	.+4      	; 0x47e <MDIO_voidEnablePullUp+0x3a>
 47a:	44 0f       	add	r20, r20
 47c:	55 1f       	adc	r21, r21
 47e:	6a 95       	dec	r22
 480:	e2 f7       	brpl	.-8      	; 0x47a <MDIO_voidEnablePullUp+0x36>
 482:	ba 01       	movw	r22, r20
 484:	62 2b       	or	r22, r18
 486:	68 bb       	out	0x18, r22	; 24
		break;
 488:	08 95       	ret
		case DIOC :
		SET_BIT(PORTC,Copy_u8Pin);
 48a:	25 b3       	in	r18, 0x15	; 21
 48c:	81 e0       	ldi	r24, 0x01	; 1
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	ac 01       	movw	r20, r24
 492:	02 c0       	rjmp	.+4      	; 0x498 <MDIO_voidEnablePullUp+0x54>
 494:	44 0f       	add	r20, r20
 496:	55 1f       	adc	r21, r21
 498:	6a 95       	dec	r22
 49a:	e2 f7       	brpl	.-8      	; 0x494 <MDIO_voidEnablePullUp+0x50>
 49c:	ba 01       	movw	r22, r20
 49e:	62 2b       	or	r22, r18
 4a0:	65 bb       	out	0x15, r22	; 21
		break;
 4a2:	08 95       	ret
		case DIOD :
		SET_BIT(PORTD,Copy_u8Pin);
 4a4:	22 b3       	in	r18, 0x12	; 18
 4a6:	81 e0       	ldi	r24, 0x01	; 1
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	ac 01       	movw	r20, r24
 4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <MDIO_voidEnablePullUp+0x6e>
 4ae:	44 0f       	add	r20, r20
 4b0:	55 1f       	adc	r21, r21
 4b2:	6a 95       	dec	r22
 4b4:	e2 f7       	brpl	.-8      	; 0x4ae <MDIO_voidEnablePullUp+0x6a>
 4b6:	ba 01       	movw	r22, r20
 4b8:	62 2b       	or	r22, r18
 4ba:	62 bb       	out	0x12, r22	; 18
 4bc:	08 95       	ret

000004be <MDIO_voidDisablePullUp>:
	}
}

void MDIO_voidDisablePullUp(u8 Copy_u8Port,u8 Copy_u8Pin)
{
		switch(Copy_u8Port)
 4be:	81 30       	cpi	r24, 0x01	; 1
 4c0:	a9 f0       	breq	.+42     	; 0x4ec <MDIO_voidDisablePullUp+0x2e>
 4c2:	81 30       	cpi	r24, 0x01	; 1
 4c4:	28 f0       	brcs	.+10     	; 0x4d0 <MDIO_voidDisablePullUp+0x12>
 4c6:	82 30       	cpi	r24, 0x02	; 2
 4c8:	f9 f0       	breq	.+62     	; 0x508 <MDIO_voidDisablePullUp+0x4a>
 4ca:	83 30       	cpi	r24, 0x03	; 3
 4cc:	c1 f5       	brne	.+112    	; 0x53e <MDIO_voidDisablePullUp+0x80>
 4ce:	2a c0       	rjmp	.+84     	; 0x524 <MDIO_voidDisablePullUp+0x66>
		{
			case DIOA :
			CLR_BIT(PORTA,Copy_u8Pin);
 4d0:	2b b3       	in	r18, 0x1b	; 27
 4d2:	81 e0       	ldi	r24, 0x01	; 1
 4d4:	90 e0       	ldi	r25, 0x00	; 0
 4d6:	ac 01       	movw	r20, r24
 4d8:	02 c0       	rjmp	.+4      	; 0x4de <MDIO_voidDisablePullUp+0x20>
 4da:	44 0f       	add	r20, r20
 4dc:	55 1f       	adc	r21, r21
 4de:	6a 95       	dec	r22
 4e0:	e2 f7       	brpl	.-8      	; 0x4da <MDIO_voidDisablePullUp+0x1c>
 4e2:	ba 01       	movw	r22, r20
 4e4:	60 95       	com	r22
 4e6:	62 23       	and	r22, r18
 4e8:	6b bb       	out	0x1b, r22	; 27
			break;
 4ea:	08 95       	ret
			case DIOB :
			CLR_BIT(PORTB,Copy_u8Pin);
 4ec:	28 b3       	in	r18, 0x18	; 24
 4ee:	81 e0       	ldi	r24, 0x01	; 1
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	ac 01       	movw	r20, r24
 4f4:	02 c0       	rjmp	.+4      	; 0x4fa <MDIO_voidDisablePullUp+0x3c>
 4f6:	44 0f       	add	r20, r20
 4f8:	55 1f       	adc	r21, r21
 4fa:	6a 95       	dec	r22
 4fc:	e2 f7       	brpl	.-8      	; 0x4f6 <MDIO_voidDisablePullUp+0x38>
 4fe:	ba 01       	movw	r22, r20
 500:	60 95       	com	r22
 502:	62 23       	and	r22, r18
 504:	68 bb       	out	0x18, r22	; 24
			break;
 506:	08 95       	ret
			case DIOC :
			CLR_BIT(PORTC,Copy_u8Pin);
 508:	25 b3       	in	r18, 0x15	; 21
 50a:	81 e0       	ldi	r24, 0x01	; 1
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	ac 01       	movw	r20, r24
 510:	02 c0       	rjmp	.+4      	; 0x516 <MDIO_voidDisablePullUp+0x58>
 512:	44 0f       	add	r20, r20
 514:	55 1f       	adc	r21, r21
 516:	6a 95       	dec	r22
 518:	e2 f7       	brpl	.-8      	; 0x512 <MDIO_voidDisablePullUp+0x54>
 51a:	ba 01       	movw	r22, r20
 51c:	60 95       	com	r22
 51e:	62 23       	and	r22, r18
 520:	65 bb       	out	0x15, r22	; 21
			break;
 522:	08 95       	ret
			case DIOD :
			CLR_BIT(PORTD,Copy_u8Pin);
 524:	22 b3       	in	r18, 0x12	; 18
 526:	81 e0       	ldi	r24, 0x01	; 1
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	ac 01       	movw	r20, r24
 52c:	02 c0       	rjmp	.+4      	; 0x532 <MDIO_voidDisablePullUp+0x74>
 52e:	44 0f       	add	r20, r20
 530:	55 1f       	adc	r21, r21
 532:	6a 95       	dec	r22
 534:	e2 f7       	brpl	.-8      	; 0x52e <MDIO_voidDisablePullUp+0x70>
 536:	ba 01       	movw	r22, r20
 538:	60 95       	com	r22
 53a:	62 23       	and	r22, r18
 53c:	62 bb       	out	0x12, r22	; 18
 53e:	08 95       	ret

00000540 <MDIO_voidWriteLowNibble>:
		}
}

void MDIO_voidWriteLowNibble(u8 Copy_u8Port,u8 Copy_u8Value)
{
	Copy_u8Value&=0x0f;
 540:	6f 70       	andi	r22, 0x0F	; 15
	switch(Copy_u8Port)
 542:	81 30       	cpi	r24, 0x01	; 1
 544:	71 f0       	breq	.+28     	; 0x562 <MDIO_voidWriteLowNibble+0x22>
 546:	81 30       	cpi	r24, 0x01	; 1
 548:	28 f0       	brcs	.+10     	; 0x554 <MDIO_voidWriteLowNibble+0x14>
 54a:	82 30       	cpi	r24, 0x02	; 2
 54c:	89 f0       	breq	.+34     	; 0x570 <MDIO_voidWriteLowNibble+0x30>
 54e:	83 30       	cpi	r24, 0x03	; 3
 550:	e1 f4       	brne	.+56     	; 0x58a <MDIO_voidWriteLowNibble+0x4a>
 552:	15 c0       	rjmp	.+42     	; 0x57e <MDIO_voidWriteLowNibble+0x3e>
	{
		case DIOA :
		PORTA&=0xf0;
 554:	8b b3       	in	r24, 0x1b	; 27
 556:	80 7f       	andi	r24, 0xF0	; 240
 558:	8b bb       	out	0x1b, r24	; 27
		PORTA|=Copy_u8Value;
 55a:	8b b3       	in	r24, 0x1b	; 27
 55c:	68 2b       	or	r22, r24
 55e:	6b bb       	out	0x1b, r22	; 27
		break;
 560:	08 95       	ret
		case DIOB :
		PORTB&=0xf0;
 562:	88 b3       	in	r24, 0x18	; 24
 564:	80 7f       	andi	r24, 0xF0	; 240
 566:	88 bb       	out	0x18, r24	; 24
		PORTB|=Copy_u8Value;
 568:	88 b3       	in	r24, 0x18	; 24
 56a:	68 2b       	or	r22, r24
 56c:	68 bb       	out	0x18, r22	; 24
		break;
 56e:	08 95       	ret
		case DIOC :
		PORTC&=0xf0;
 570:	85 b3       	in	r24, 0x15	; 21
 572:	80 7f       	andi	r24, 0xF0	; 240
 574:	85 bb       	out	0x15, r24	; 21
		PORTC|=Copy_u8Value;
 576:	85 b3       	in	r24, 0x15	; 21
 578:	68 2b       	or	r22, r24
 57a:	65 bb       	out	0x15, r22	; 21
		break;
 57c:	08 95       	ret
		case DIOD :
		PORTD&=0xf0;
 57e:	82 b3       	in	r24, 0x12	; 18
 580:	80 7f       	andi	r24, 0xF0	; 240
 582:	82 bb       	out	0x12, r24	; 18
		PORTD|=Copy_u8Value;
 584:	82 b3       	in	r24, 0x12	; 18
 586:	68 2b       	or	r22, r24
 588:	62 bb       	out	0x12, r22	; 18
 58a:	08 95       	ret

0000058c <MDIO_voidWriteHighNibble>:
	
}

void MDIO_voidWriteHighNibble(u8 Copy_u8Port,u8 Copy_u8Value)
{
	Copy_u8Value<<=4;
 58c:	62 95       	swap	r22
 58e:	60 7f       	andi	r22, 0xF0	; 240
	switch(Copy_u8Port)
 590:	81 30       	cpi	r24, 0x01	; 1
 592:	71 f0       	breq	.+28     	; 0x5b0 <MDIO_voidWriteHighNibble+0x24>
 594:	81 30       	cpi	r24, 0x01	; 1
 596:	28 f0       	brcs	.+10     	; 0x5a2 <MDIO_voidWriteHighNibble+0x16>
 598:	82 30       	cpi	r24, 0x02	; 2
 59a:	89 f0       	breq	.+34     	; 0x5be <MDIO_voidWriteHighNibble+0x32>
 59c:	83 30       	cpi	r24, 0x03	; 3
 59e:	e1 f4       	brne	.+56     	; 0x5d8 <MDIO_voidWriteHighNibble+0x4c>
 5a0:	15 c0       	rjmp	.+42     	; 0x5cc <MDIO_voidWriteHighNibble+0x40>
	{
		case DIOA :
		PORTA&=0x0f;
 5a2:	8b b3       	in	r24, 0x1b	; 27
 5a4:	8f 70       	andi	r24, 0x0F	; 15
 5a6:	8b bb       	out	0x1b, r24	; 27
		PORTA|=Copy_u8Value;
 5a8:	8b b3       	in	r24, 0x1b	; 27
 5aa:	68 2b       	or	r22, r24
 5ac:	6b bb       	out	0x1b, r22	; 27
		break;
 5ae:	08 95       	ret
		case DIOB :
		PORTB&=0x0f;
 5b0:	88 b3       	in	r24, 0x18	; 24
 5b2:	8f 70       	andi	r24, 0x0F	; 15
 5b4:	88 bb       	out	0x18, r24	; 24
		PORTB|=Copy_u8Value;
 5b6:	88 b3       	in	r24, 0x18	; 24
 5b8:	68 2b       	or	r22, r24
 5ba:	68 bb       	out	0x18, r22	; 24
		break;
 5bc:	08 95       	ret
		case DIOC :
		PORTC&=0x0f;
 5be:	85 b3       	in	r24, 0x15	; 21
 5c0:	8f 70       	andi	r24, 0x0F	; 15
 5c2:	85 bb       	out	0x15, r24	; 21
		PORTC|=Copy_u8Value;
 5c4:	85 b3       	in	r24, 0x15	; 21
 5c6:	68 2b       	or	r22, r24
 5c8:	65 bb       	out	0x15, r22	; 21
		break;
 5ca:	08 95       	ret
		case DIOD :
		PORTD&=0x0f;
 5cc:	82 b3       	in	r24, 0x12	; 18
 5ce:	8f 70       	andi	r24, 0x0F	; 15
 5d0:	82 bb       	out	0x12, r24	; 18
		PORTD|=Copy_u8Value;
 5d2:	82 b3       	in	r24, 0x12	; 18
 5d4:	68 2b       	or	r22, r24
 5d6:	62 bb       	out	0x12, r22	; 18
 5d8:	08 95       	ret

000005da <main>:
#include "EEPROM_interface.h"


int main(void)
{
	MEEPROM_voidWrite(0X0063,0X52);
 5da:	83 e6       	ldi	r24, 0x63	; 99
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	62 e5       	ldi	r22, 0x52	; 82
 5e0:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <MEEPROM_voidWrite>
 5e4:	ff cf       	rjmp	.-2      	; 0x5e4 <main+0xa>

000005e6 <MEEPROM_voidWrite>:


void MEEPROM_voidWrite(u16 Copy_u16Address,u8 Copy_u8data)
{
	/* wait the completion of previous write operation */
	while(GET_BIT(EECR,1)==1);
 5e6:	2c b3       	in	r18, 0x1c	; 28
 5e8:	21 fd       	sbrc	r18, 1
 5ea:	fd cf       	rjmp	.-6      	; 0x5e6 <MEEPROM_voidWrite>
	/* write address on EEARL , EEARH */
	EEARL=(u8)Copy_u16Address;
 5ec:	8e bb       	out	0x1e, r24	; 30
	EEARH=(u8)(Copy_u16Address>>8);
 5ee:	9f bb       	out	0x1f, r25	; 31
	/* write data on EEDR */
	EEDR=Copy_u8data;
 5f0:	6d bb       	out	0x1d, r22	; 29
	/* start writing  */
	SET_BIT(EECR,2);  // set EEMRE BIT
 5f2:	e2 9a       	sbi	0x1c, 2	; 28
	SET_BIT(EECR,1);  // set EEWE BIT 	
 5f4:	e1 9a       	sbi	0x1c, 1	; 28
}
 5f6:	08 95       	ret

000005f8 <MEEPROM_voidRead>:

u8 MEEPROM_voidRead(u16 Copy_u16Address)
{
	/* wait the completion of previous write operation */
	while(GET_BIT(EECR,1)==1);
 5f8:	2c b3       	in	r18, 0x1c	; 28
 5fa:	21 fd       	sbrc	r18, 1
 5fc:	fd cf       	rjmp	.-6      	; 0x5f8 <MEEPROM_voidRead>
	/* write address on EEARL , EEARH */
	EEARL=(u8)Copy_u16Address;
 5fe:	8e bb       	out	0x1e, r24	; 30
	EEARH=(u8)(Copy_u16Address>>8);
 600:	9f bb       	out	0x1f, r25	; 31
	/* start EEPROM read operation */
	SET_BIT(EECR,0); // Set EERE BIT
 602:	e0 9a       	sbi	0x1c, 0	; 28
	return EEDR;	
 604:	8d b3       	in	r24, 0x1d	; 29
 606:	08 95       	ret

00000608 <_exit>:
 608:	f8 94       	cli

0000060a <__stop_program>:
 60a:	ff cf       	rjmp	.-2      	; 0x60a <__stop_program>
